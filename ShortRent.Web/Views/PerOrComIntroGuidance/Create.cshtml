@model PerOrComIntroGuidanceViewModel
@{
    Layout = "~/Views/Shared/AdminMaster.cshtml";
}
@{
    List<SelectListItem> selectListItems = new List<SelectListItem>() {
    new SelectListItem(){Selected=true,Text="被招聘者",Value="False" },
    new SelectListItem(){ Selected=false,Text="招聘者",Value="True"}
};
}
@if (Model != null)
{
    using (Ajax.BeginForm("Edit", new AjaxOptions() { HttpMethod = "post", OnBegin = "BeginCreateIntro", OnSuccess = "SucessCreateIntro" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal box">
            <div class="box-body">
                @Html.ValidationSummary(true, "", new { @class = "text-error" })
                @Html.HiddenFor(model => model.ID)
                @Html.HiddenFor(model=>model.CreateTime)
                <div class="form-group col-md-6">
                    <div class="row">
                        @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-4 text-right" })
                        <div class="col-xs-12 col-md-8">
                            <div class="row clear-margin">
                                @Html.DropDownListFor(model => model.Type, (IEnumerable<SelectListItem>)selectListItems, new { @class = "form-control col-md-8" })
                                <input hidden="hidden" id="hidType" value="@Model.Type.ToString()" />
                                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-error" })
                            </div>

                        </div>
                    </div>

                </div>

                <div class="form-group col-md-12">
                    <div class="row">
                        @Html.LabelFor(model => model.QuestionMsg, htmlAttributes: new { @class = "control-label col-md-2 text-right" })
                        <div class="col-xs-12 col-md-10">
                            <div class="row clear-margin">
                                @Html.TextAreaFor(model => model.QuestionMsg, htmlAttributes: new { @class = "form-control col-md-8", rows = "3" })
                                <input hidden="hidden" id="hidQuestionMsg" value="@Model.QuestionMsg" />
                                @Html.ValidationMessageFor(model => model.QuestionMsg, "", new { @class = "text-error" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group col-md-12">
                    <div class="row text-center marTop-xs">
                        <input type="submit" value="修改" class="btn btn-success" />
                    </div>
                </div>
            </div>`
        </div>
    }
}
else
{
    using (Ajax.BeginForm(new AjaxOptions() { HttpMethod = "post", OnBegin = "BeginCreateIntro", OnSuccess = "SucessCreateIntro" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal box">
            <div class="box-body">
                @Html.ValidationSummary(true, "", new { @class = "text-error" })
                <div class="form-group col-md-6">
                    <div class="row">
                        @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-4 text-right" })
                        <div class="col-xs-12 col-md-8">
                            <div class="row clear-margin">
                                @Html.DropDownListFor(model => model.Type, (IEnumerable<SelectListItem>)selectListItems, new { @class = "form-control col-md-8" })
                                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-error" })
                            </div>

                        </div>
                    </div>

                </div>

                <div class="form-group col-md-12">
                    <div class="row">
                        @Html.LabelFor(model => model.QuestionMsg, htmlAttributes: new { @class = "control-label col-md-2 text-right" })
                        <div class="col-xs-12 col-md-10">
                            <div class="row clear-margin">
                                @Html.TextAreaFor(model => model.QuestionMsg, htmlAttributes: new { @class = "form-control col-md-8", rows = "3" })
                                @Html.ValidationMessageFor(model => model.QuestionMsg, "", new { @class = "text-error" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group col-md-12">
                    <div class="row text-center marTop-xs">
                        <input type="submit" value="创建" class="btn btn-success" />
                    </div>
                </div>
            </div>
        </div>
    }
}

@section Scripts{
    @Scripts.Render("~/Scripts/Jquery-Ajax-unobtrusive")
    @Scripts.Render("~/Scripts/PerOrComIntroGuidanceCreateOrEdit")
}

